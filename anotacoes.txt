AULA - 1: Por que usar typescript?
* Introdução ao projeto e sua estrutura
* Um pouco sobre módulos do ECMASCRIPT
* Modelagem de uma Negociação em Javascript
* Buracos em nossa modelagem por limitações da linguagem Javascript

AULA - 2: Typescript e compilador
* Download do TypeScript
* Configuração do compilador e papel do tsconfig.json
* Integração com scripts do Node.js
* Modificadores de acesso private e public
* Benefícios iniciais da linguagem TypeScript

AULA - 3: Benefícios da tipagem estática
* O tipo implícito any
* Benefícios da tipagem estática
* Mais configurações do compilador tsc
* Retorno de método explícito
* Conversão de valores da interface do usuário

Quando o vscode der o autocomplete de uma classe é necessário colocar .js se não o código não funciona. Isso se você não estiver codando em um framework(Angular, vue ou react) esses frameworks no sistema de build colocam automaticmanete
.value retorna sempre uma string
sempre tipar os retornos dos métodos criados
começar um projeto do zero =>"noImplicitAny": true para verificação do TS de tipagem

AULA - 4: Avançando na modelagem do domínio:
* Modelagem da classe Negociacoes
* Utilização de Generics
* Revisão sobre encapsulamento
* Questões de mutabilidade e como solucioná-la
* O tipo ReadonlyArray
* Adição de negociações em nossa lista

any[] significa que é um array do tipo any, pode entrar qualquer coisa dentro do array
<T> o T maiúsculo no meio significa TYPE
Readonly é uma maneira de travar a mdoficação do array

AULA - 5: Simplificando nosso código:
* Nova maneira de declaração de array com generics
* O tipo ReadonlyArray
* O modificador readonly
* Getters vs propriedades públicas em modo de leitura
* Programação defensiva

Podemos declarar as propriedades das classes no próprio construtor colocando o atributo private na frente


CURSO - 2
AULA - 1: Elaborando uma solução do view
* Inspiração no React para criação de templates declarativos e dinâmicos
* Manipulação declarativa do DOM através de template
* Template dinâmico
* Formatação de datas usando Intl

Para criar elementos HTML dinamicamente podemos usar a propriedade innerHTML que recebe uma string e é convertida para elementos do DOM